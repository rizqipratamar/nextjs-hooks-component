import Head from "next/head";
import { DeleteOutlined, EditOutlined, PlusOutlined } from "@ant-design/icons";
import { Button, Card, PageHeader, Tooltip, Col, Row, Modal } from "antd";
import { useState } from "react";

export default function Home({ routes, initialState }) {
  const [state, setState] = useState(initialState);

  const addTask = () => {
    setState({
      ...state,
      taskList: [
        ...state.taskList,
        {
          id: state.taskList.length + 1,
          name: "Task " + (state.taskList.length + 1),
          desc: "Task " + (state.taskList.length + 1) + " description",
          status: false,
        },
      ],
    });
  };

  const deleteTask = (selectedTask) => {
    setState({
      ...state,
      taskList: state.taskList.filter((task) => task.id !== selectedTask.id),
    });
  };

  const selectTask = (task) => {
    setState({
      ...state,
      selectedTask: task,
    });
  };

  const updateTask = () => {
    setState({
      ...state,
      taskList: state.taskList.map((task) => {
        if (task.id === state.selectedTask.id) {
          return {
            ...task,
            name: state.selectedTask.name,
            desc: state.selectedTask.desc,
            status: state.selectedTask.status,
          };
        }
        return task;
      }),
      selectedTask: null,
    });
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <>
          <PageHeader
            className="site-page-header"
            title={state.title}
            breadcrumb={{
              routes,
            }}
            subTitle={state.subtitle}
          />

          <Modal
            visible={state.selectedTask ? true : false}
            onOk={() => {
              updateTask();
            }}
            onCancel={() => selectTask(null)}
          >
            <Row>
              <Col span={12}> Name </Col>{" "}
              <Col span={12}>
                <input
                  value={state.selectedTask?.name}
                  onChange={(e) =>
                    setState({
                      ...state,
                      selectedTask: {
                        ...state.selectedTask,
                        name: e.target.value,
                      },
                    })
                  }
                />
              </Col>
            </Row>
            <Row>
              <Col span={12}> Description </Col>{" "}
              <Col span={12}>
                <textarea
                  value={state.selectedTask?.desc}
                  onChange={(e) =>
                    setState({
                      ...state,
                      selectedTask: {
                        ...state.selectedTask,
                        desc: e.target.value,
                      },
                    })
                  }
                />
              </Col>
            </Row>
          </Modal>

          <Card>
            <Tooltip title="Add Task">
              <Button
                type="dashed"
                shape="square"
                icon={<PlusOutlined />}
                size="large"
                onClick={() => addTask()}
              >
                Add Task{" "}
              </Button>
            </Tooltip>
            <span style={{ marginLeft: 20 }}>
              Jumlah Task {state.taskList.length}
            </span>

            <Row style={{ marginTop: 20 }} gutter={16}>
              {state.taskList?.map((task, index) => (
                <Col span={6} key={task?.id}>
                  <Card
                    style={{
                      marginTop: 16,
                    }}
                    title={task.name}
                    actions={[
                      <EditOutlined
                        key="edit"
                        onClick={() => selectTask(task)}
                      />,
                      <DeleteOutlined
                        key="delete"
                        onClick={() => deleteTask(task)}
                      />,
                    ]}
                  >
                    {task.desc}
                  </Card>
                </Col>
              ))}
            </Row>
          </Card>
        </>
      </main>
    </div>
  );
}

export const getServerSideProps = async (context) => {
  const props = {
    routes: [
      {
        path: "index",
        breadcrumbName: "First-level Menu",
      },
      {
        path: "first",
        breadcrumbName: "Second-level Menu",
      },
      {
        path: "second",
        breadcrumbName: "Third-level Menu",
      },
    ],
    initialState: {
      title: "To Do List",
      subtitle: "A simple to do list with react class component",
      taskList: [
        {
          id: 1,
          name: "Task 1",
          desc: "Task 1 description",
          status: true,
        },
      ],
      selectedTask: null,
    },
  };
  return { props };
};
